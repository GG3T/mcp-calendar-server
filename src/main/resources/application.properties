# MCP Server configuration
spring.ai.mcp.server.name=mcp-calendar-server
spring.ai.mcp.server.version=0.4.0
spring.ai.mcp.server.type=SYNC
spring.ai.mcp.server.transport.type=SSE
spring.ai.mcp.server.external-url=${SERVER_EXTERNAL_URL:http://localhost:3500}

# Habilitando actuator para monitoramento
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Configuração do servidor
server.port=${SERVER_PORT:3500}
server.address=0.0.0.0
server.ssl.enabled=false

# Configurações para proxy reverso
server.forward-headers-strategy=FRAMEWORK
server.tomcat.remoteip.remote-ip-header=X-Forwarded-For
server.tomcat.remoteip.protocol-header=X-Forwarded-Proto

# Configuração de logs de acesso do Tomcat
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.directory=${TOMCAT_ACCESSLOG_DIR:/app/logs}
server.tomcat.accesslog.prefix=access_log
server.tomcat.accesslog.suffix=.log
server.tomcat.accesslog.pattern=%{yyyy-MM-dd HH:mm:ss}t %s %r %{User-Agent}i %{Referer}i %a %b %D
server.tomcat.accesslog.rotate=true

# Configurações específicas para SSE
spring.mvc.async.request-timeout=-1
server.tomcat.max-threads=200
server.tomcat.max-connections=10000
server.tomcat.connection-timeout=40000

# Configuração de CORS para SSE
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.exposed-headers=*
spring.web.cors.allow-credentials=false
spring.web.cors.max-age=3600

# ===== CONFIGURAÇÕES DE TIMEOUT E RATE LIMITING =====
# Configuração de timeout para conexões SSE
app.sse.timeout-millis=300000
app.sse.heartbeat-interval-millis=30000
app.sse.heartbeat-enabled=true
app.sse.health-check-interval-millis=60000

# Configuração de rate limiting
app.rate-limit.enabled=true
app.rate-limit.max-requests=60

# ===== CONFIGURAÇÕES DE TOKEN =====
# Intervalo de limpeza de tokens antigos (10 minutos = 600000 ms)
app.token.cleanup.interval-ms=600000
# Idade máxima para tokens não utilizados (30 minutos)
app.token.cleanup.max-age-minutes=30

# ===== CONFIGURAÇÕES DE LOGGING =====
# Níveis de log
logging.level.root=${LOG_LEVEL_ROOT:INFO}
logging.level.chatgm.com.mcp_server=${LOG_LEVEL_APP:INFO}
logging.level.org.springframework.web=${LOG_LEVEL_SPRING_WEB:INFO}
logging.level.org.springframework.ai=${LOG_LEVEL_SPRING_AI:INFO}
logging.level.io.modelcontextprotocol.server.transport=WARN

# Configuração de logging detalhado
app.request-logging.detailed=true
app.request-logging.include-headers=true
app.request-logging.include-payload=true
app.request-logging.include-response=true
app.request-logging.max-payload-length=10000

# Desativando logs excessivos
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=OFF
logging.level.org.springframework.web.servlet.DispatcherServlet=INFO
logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping=INFO

# Configuração de timeout para WebClient e RestTemplate
webclient.timeout.connect=5000
webclient.timeout.read=5000
webclient.timeout.write=5000

# Configuração para utilização do processador de templates
spring.jackson.default-property-inclusion=non_null
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

# API de agendamentos
appointment.api.base-url=${APPOINTMENT_API_URL:https://service.mcpgod.com.br/api}
