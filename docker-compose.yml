version: "3.7"
services:
  mcp-calendar-service:
    image: gg3t/mcp-server:0.26.0
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - mcpgod
    ports:
      # Porta exposta apenas para depuração
      - "127.0.0.1:3501:3500"
    volumes:
      # Volume para logs persistentes
      - mcp_logs:/app/logs
    environment:
      - SERVER_PORT=3500
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_EXTERNAL_URL=https://calendar.mcpgod.com.br
      # Diretório de logs
      - TOMCAT_ACCESSLOG_DIR=/app/logs
      # Configurações de timeout e rate limiting
      - APP_SSE_TIMEOUT_MILLIS=300000
      - APP_SSE_HEARTBEAT_INTERVAL_MILLIS=30000
      - APP_SSE_HEARTBEAT_ENABLED=true
      - APP_SSE_HEALTH_CHECK_INTERVAL_MILLIS=60000
      - APP_RATE_LIMIT_ENABLED=true
      - APP_RATE_LIMIT_MAX_REQUESTS=60
      # Configurações de logging
      - LOG_LEVEL_ROOT=INFO
      - LOG_LEVEL_APP=INFO
      - LOG_LEVEL_SPRING_WEB=INFO
      - LOG_LEVEL_SPRING_AI=INFO
      # Endpoint da API
      - APPOINTMENT_API_URL=https://service.mcpgod.com.br/api
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
      labels:
        # Configuração simplificada
        - "traefik.enable=true"
        
        # Configuração do router HTTP
        - "traefik.http.routers.mcpgod.rule=Host(`calendar.mcpgod.com.br`)"
        - "traefik.http.routers.mcpgod.entrypoints=websecure"
        - "traefik.http.routers.mcpgod.tls=true"
        - "traefik.http.routers.mcpgod.tls.certresolver=letsencryptresolver"
        
        # Configuração do serviço
        - "traefik.http.services.mcpgod.loadbalancer.server.port=3500"
        
        # Middleware para SSE
        - "traefik.http.middlewares.sse-headers.headers.customResponseHeaders.Cache-Control=no-cache"
        - "traefik.http.middlewares.sse-headers.headers.customResponseHeaders.Connection=keep-alive"
        - "traefik.http.middlewares.sse-headers.headers.customResponseHeaders.X-Accel-Buffering=no"
        
        # Aplicar o middleware
        - "traefik.http.routers.mcpgod.middlewares=sse-headers@docker"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3500/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  mcpgod:
    external: true
    attachable: true

volumes:
  mcp_logs:
    driver: local